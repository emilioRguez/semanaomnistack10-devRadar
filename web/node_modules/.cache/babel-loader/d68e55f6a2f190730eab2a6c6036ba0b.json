{"ast":null,"code":"import _slicedToArray from \"/home/emilio/www/semanaomnistack10/web/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/emilio/www/semanaomnistack10/web/src/App.js\";\nimport React, { useState } from 'react'; // Componente: Bloco isolado de HTML, CSS e JS, o qual não interfere no restante da aplicação.\n// Propriedades: Informaciones que un componente PAI passa para un componente FILHO.\n// Estado:\n\nfunction App() {\n  // Es un componente\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        counter = _useState2[0],\n        setCounter = _useState2[1]; // se crea un estado con el valor inicial 0\n\n\n  function incrementCounter() {\n    setCounter(counter + 1);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Contador: \", counter, \" \"), React.createElement(\"button\", {\n    onClick: incrementCounter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Incrementar\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/emilio/www/semanaomnistack10/web/src/App.js"],"names":["React","useState","App","counter","setCounter","incrementCounter"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;AACA;AACA;;AAEA,SAASC,GAAT,GAAe;AAAG;AAAH,oBAEgBD,QAAQ,CAAC,CAAD,CAFxB;AAAA;AAAA,QAENE,OAFM;AAAA,QAEEC,UAFF,kBAE6B;;;AAE1C,WAASC,gBAAT,GAA4B;AAC1BD,IAAAA,UAAU,CAACD,OAAO,GAAC,CAAT,CAAV;AACD;;AAED,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAgBA,OAAhB,MADF,EAEE;AAAQ,IAAA,OAAO,EAAEE,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,CADF;AAMD;;AAED,eAAeH,GAAf","sourcesContent":["import React, { useState } from 'react';\n\n// Componente: Bloco isolado de HTML, CSS e JS, o qual não interfere no restante da aplicação.\n// Propriedades: Informaciones que un componente PAI passa para un componente FILHO.\n// Estado:\n\nfunction App() {  // Es un componente\n  \n  const [counter,setCounter] = useState(0); // se crea un estado con el valor inicial 0\n\n  function incrementCounter() {\n    setCounter(counter+1);\n  }\n\n  return (\n    <>\n      <h1>Contador: { counter } </h1>\n      <button onClick={incrementCounter}>Incrementar</button>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}